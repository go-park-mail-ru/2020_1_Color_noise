version: "3.3"

services:

  main:

    build:
      context: .
      dockerfile: build/main.Dockerfile

    volumes:
      - type: bind
        source: ../storage
        target: /storage

    network_mode: host
    #ports:
     # - 8000:8000

    #depends_on:
     # - database

  auth:

    build:
      context: .
      dockerfile: build/auth.Dockerfile

    volumes:
      - type: bind
        source: ../storage
        target: /storage

    network_mode: host
      #ports:
      # - 8000:8000

      #depends_on:
    #- database

  chat:

    build:
      context: .
      dockerfile: ./build/chat.Dockerfile

    network_mode: host
    #ports:
     # - 8000:8000

      #depends_on:
    #- database

  user:

    build:
      context: .
      dockerfile: ./build/user.Dockerfile

    network_mode: host
    #ports:
    # - 8000:8000

      #depends_on:
    #- database


  database:

    network_mode: host
    build:
      context: .
      dockerfile: ./build/db.Dockerfile

    ports:
      - 5432:5432

  nginx:
    image: nginx:1.15.3

    #links:
    #  - main:main
    #  - chat:chat
    network_mode: host

    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ../static:/static
      - ../storage:/storage

    ports:
      - 80:80


  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    network_mode: host
    restart: always
  #    deploy:
  #      placement:
  #        constraints:
  #          - node.hostname == ${HOSTNAME}