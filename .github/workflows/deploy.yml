name: Zinterest build

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Build Docker Images
        run: docker-compose build
      - name: Push Docker Image
        run: docker-compose push main auth chat user
      - name: Upload nginx config result
        uses: actions/upload-artifact@v1
        with:
          name: nginx
          path: ./server
      - name: Upload docker-compose result
        uses: actions/upload-artifact@v1
        with:
          name: docker
          path: ./docker-compose.yaml

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download configs
        uses: actions/download-artifact@v1
        with:
          name: nginx
      - name: Download configs
        uses: actions/download-artifact@v1
        with:
          name: docker
      - name: Transfer nginx file to server
        uses: appleboy/scp-action@v0.0.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          source: "nginx/server"
          target: "/home/ubuntu/2020_1_Color_noise"
      - name: pull docker image
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: sudo docker pull
      - name: deploy docker image
          uses: appleboy/ssh-action@master
          with:
            envs: GITHUB_SHA
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.PRIVATE_KEY }}
            script: |
              sudo docker rm -f $(sudo docker ps -aq)
              sudo docker run -d -p 8080:8080 dmitrydorofeev/godeploy:${GITHUB_SHA::8}